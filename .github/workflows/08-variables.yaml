name: 08 - Using Variables

on: 
  push:
  workflow_dispatch:

env:
  WORKFLOW_VAR: 'I am a workflow env var'
  OVERWRITTEN: 'I will be overwritten at env level'
  UNDEFINED_VAR_WITH_DEFAULT: ${{ var.UNDEFINED_VAR || 'default value' }}

jobs:
  echo:
    runs-on: ubuntu-latest
    env:
      JOB_VAR: 'I am a job env var'
      OVERWRITTEN: 'I have been overwritten at the job level'

    steps:
      - name: Print Env Variables
        env:
          STEP_VAR: 'I am a step env var'
          step_var2: 'I am another step var'
        run: |
            echo "Step ENV VAR: ${{ env.STEP_VAR }}"
            echo "Step ENV VAR2: ${{ env.step_var2  }}"
            echo "JOB ENV VAR: ${{ env.JOB_VAR }}"
            echo "WORKFLOW ENV VAR: ${{ env.WORKFLOW_VAR }}"
            echo "Overwritten: ${{ env.OVERWRITTEN }}"

      - name: Overwite job variable
        env:
          OVERWRITTEN: 'I have been overwritten at the step level'
        run: |
          echo "Step env var: ${{ env.STEP_VAR }}"
  echo:
    runs-on: ubuntu-latest
    steps:
      -name: Print Variables
       run: |
        echo "Org var: ${{ var.ORG_VAR }}"
        echo "Org overwritten var: ${{ vars.OVERWRITTEN_VAR }}"
        echo "Repo var: ${{ vars.REPOSITORY_VAR }}"
  echo-prod:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Print Production Variables
        run: |
          echo "Org var: ${{ var.ORG_VAR }}"
          echo "Org overwritten var: ${{ vars.OVERWRITTEN_VAR }}"
          echo "Repo var: ${{ vars.REPOSITORY_VAR }}"
          echo "Environmant var: ${{ vars.TARGET_VAR }}"
  echo-undefined:
    runs-on: ubuntu-latest
    steps:
      -name: Print Undefined Variables
       run: |
        echo "Org var: ${{ var.UNDEFINED_VAR || 'default value' }}"



      